#pragma once

// 用于二次展开一个拼接完的宏
// 由于宏的仅支持一次展开而不能进行二次展开所以包一层已实现展开后内容可再次作为宏被调用
#define __TTL_APPEND__( x, y ) __TTL_APPEND1__(x,y)
#define __TTL_APPEND1__( x, y ) x ## y
//#define __TTL_EXPEND_VALUE__( x ) x

// 由于数组初始化不需要用到参数(FIR_DEF)，该参数用于抹除__TTL_CALL_RECURSIVE__0的展开
#define __TTL_DEFAULT_BEG_NONE__(ARRAY_NAME, VAL_NAME, I, IPP)
// 用于生成数组初始化的代码 : X[I] = Y ## J
#define __TTL_INIT_ARRAY__(ARRAY_NAME, VAL_NAME, I, IPP)			ARRAY_NAME[I] = __TTL_APPEND__(VAL_NAME, I);
// 用户生成数组初始化代码 : X[I] = Y ## I
#define __TTL_INIT_ARRAY_ZINGZAG__(ARRAY_NAME, VAL_NAME, I, IPP)	ARRAY_NAME[I] = __TTL_APPEND__(VAL_NAME, IPP);

/**
* desc:
*		错位初始化数组 vec[0]=val1; vec[1]=val2; ...
* param:
*		X : 数组名称
*		Y : 变量一致前缀
*		VALUE : 初始化长度，可为宏或具体数值
* example:
*		arr[0]=val1; arr[1]= val2; arr[2] = val3; ...; arr[99] = val100;
*		TTL_INIT_ARRAY_ZINGZAG(arr, val, 100);
*/
#define TTL_INIT_ARRAY_ZINGZAG(ARRAY_NAME, VAL_NAME, LENGTH)		TTL_COMMOM_CALL_RECURSIVE(ARRAY_NAME, VAL_NAME, LENGTH, __TTL_DEFAULT_BEG_NONE__, __TTL_INIT_ARRAY_ZINGZAG__, __TTL_INIT_ARRAY_ZINGZAG__, __TTL_INIT_ARRAY_ZINGZAG__)

/**
* desc:
*		初始化数据 vec[0]=val0; vec[1]=vel1; ...
* param:
*		X : 数组名称
*		Y : 变量一致前缀
*		VALUE : 初始化长度，可为宏或具体数值
* example:
*		arr[0]=val0; arr[1]=val1; arr[3]=val3; ...; arr[100]=val100;
*		TTL_INIT_ARRAY(arr, val, 100);
*/
#define TTL_INIT_ARRAY(ARRAY_NAME, VAL_NAME, LENGTH)				TTL_COMMOM_CALL_RECURSIVE(ARRAY_NAME, VAL_NAME, LENGTH, __TTL_DEFAULT_BEG_NONE__, __TTL_INIT_ARRAY__, __TTL_INIT_ARRAY__, __TTL_INIT_ARRAY__)




/************************************************************************/
/* 数字与宏之间转换定义，用于将宏转换为数值                                */
/************************************************************************/
#define __TTL_NUM__0				0
#define __TTL_NUM__1				1
#define __TTL_NUM__2				2
#define __TTL_NUM__3				3
#define __TTL_NUM__4				4
#define __TTL_NUM__5				5
#define __TTL_NUM__6				6
#define __TTL_NUM__7				7
#define __TTL_NUM__8				8
#define __TTL_NUM__9				9
#define __TTL_NUM__10				10
#define __TTL_NUM__11				11
#define __TTL_NUM__12				12
#define __TTL_NUM__13				13
#define __TTL_NUM__14				14
#define __TTL_NUM__15				15
#define __TTL_NUM__16				16
#define __TTL_NUM__17				17
#define __TTL_NUM__18				18
#define __TTL_NUM__19				19
#define __TTL_NUM__20				20
#define __TTL_NUM__21				21
#define __TTL_NUM__22				22
#define __TTL_NUM__23				23
#define __TTL_NUM__24				24
#define __TTL_NUM__25				25
#define __TTL_NUM__26				26
#define __TTL_NUM__27				27
#define __TTL_NUM__28				28
#define __TTL_NUM__29				29
#define __TTL_NUM__30				30
#define __TTL_NUM__31				31
#define __TTL_NUM__32				32
#define __TTL_NUM__33				33
#define __TTL_NUM__34				34
#define __TTL_NUM__35				35
#define __TTL_NUM__36				36
#define __TTL_NUM__37				37
#define __TTL_NUM__38				38
#define __TTL_NUM__39				39
#define __TTL_NUM__40				40
#define __TTL_NUM__41				41
#define __TTL_NUM__42				42
#define __TTL_NUM__43				43
#define __TTL_NUM__44				44
#define __TTL_NUM__45				45
#define __TTL_NUM__46				46
#define __TTL_NUM__47				47
#define __TTL_NUM__48				48
#define __TTL_NUM__49				49
#define __TTL_NUM__50				50
#define __TTL_NUM__51				51
#define __TTL_NUM__52				52
#define __TTL_NUM__53				53
#define __TTL_NUM__54				54
#define __TTL_NUM__55				55
#define __TTL_NUM__56				56
#define __TTL_NUM__57				57
#define __TTL_NUM__58				58
#define __TTL_NUM__59				59
#define __TTL_NUM__60				60
#define __TTL_NUM__61				61
#define __TTL_NUM__62				62
#define __TTL_NUM__63				63
#define __TTL_NUM__64				64
#define __TTL_NUM__65				65
#define __TTL_NUM__66				66
#define __TTL_NUM__67				67
#define __TTL_NUM__68				68
#define __TTL_NUM__69				69
#define __TTL_NUM__70				70
#define __TTL_NUM__71				71
#define __TTL_NUM__72				72
#define __TTL_NUM__73				73
#define __TTL_NUM__74				74
#define __TTL_NUM__75				75
#define __TTL_NUM__76				76
#define __TTL_NUM__77				77
#define __TTL_NUM__78				78
#define __TTL_NUM__79				79
#define __TTL_NUM__80				80
#define __TTL_NUM__81				81
#define __TTL_NUM__82				82
#define __TTL_NUM__83				83
#define __TTL_NUM__84				84
#define __TTL_NUM__85				85
#define __TTL_NUM__86				86
#define __TTL_NUM__87				87
#define __TTL_NUM__88				88
#define __TTL_NUM__89				89
#define __TTL_NUM__90				90
#define __TTL_NUM__91				91
#define __TTL_NUM__92				92
#define __TTL_NUM__93				93
#define __TTL_NUM__94				94
#define __TTL_NUM__95				95
#define __TTL_NUM__96				96
#define __TTL_NUM__97				97
#define __TTL_NUM__98				98
#define __TTL_NUM__99				99
#define __TTL_NUM__100				100
#define __TTL_NUM__101				101
#define __TTL_NUM__102				102
#define __TTL_NUM__103				103
#define __TTL_NUM__104				104
#define __TTL_NUM__105				105
#define __TTL_NUM__106				106
#define __TTL_NUM__107				107
#define __TTL_NUM__108				108
#define __TTL_NUM__109				109
#define __TTL_NUM__110				110
#define __TTL_NUM__111				111
#define __TTL_NUM__112				112
#define __TTL_NUM__113				113
#define __TTL_NUM__114				114
#define __TTL_NUM__115				115
#define __TTL_NUM__116				116
#define __TTL_NUM__117				117
#define __TTL_NUM__118				118
#define __TTL_NUM__119				119
#define __TTL_NUM__120				120
#define __TTL_NUM__121				121
#define __TTL_NUM__122				122
#define __TTL_NUM__123				123
#define __TTL_NUM__124				124
#define __TTL_NUM__125				125
#define __TTL_NUM__126				126
#define __TTL_NUM__127				127
#define __TTL_NUM__128				128


/**
* desc :
*		此处定义了一套通用的模板递归展开宏，用户可以输入一个编译时已经确定的数值N(可为宏或STATIC CONST 类型定值)作为参数让模板递归的执行N次
*		当你输入参数N，该宏会执行N+1次，
*		首次会展开参数 FIR_DEF
*		第二次会展开参数 SEC_DEF
*		第三次至第N吃会展开参数 MID_DEF
*		最后一次(N+1)次会展开END_DEF宏
* param :
*		X(自定义参数1)
*		Y(自定义参数2)
*		I(第I次展开，0开始且0会分别在FIR_DEF,SEC_DEF中执行一次)
*		J(I+1)
*
*	example :
*		详见 : __TTL_INIT_ARRAY__, __TTL_INIT_ARRAY_ZINGZAG__
*/

// 递归调用通用封装，只需要重定义一个参数即可，重复VALUE次展开，I范围[0~VALUE-1] J范围[1~VALUE]
#define TTL_EASY_CALL_RECURSIVE(X, Y, VALUE, DEF)	__TTL_APPEND__(__TTL_CALL_RECURSIVE__, VALUE)(__TTL_DEFAULT_BEG_NONE__, DEF, DEF, DEF, X, Y)

// 递归调用通用封装，需要自定义FIR_DEF(首次展开规则),SEC_DEF(第二次展开规则)MID_DEF(通用展开规则)及END_DEF(结尾展开规则)
#define TTL_COMMOM_CALL_RECURSIVE(X, Y, VALUE, FIR_DEF, SEC_DEF, MID_DEF, END_DEF)		__TTL_APPEND__(__TTL_CALL_RECURSIVE__, VALUE)(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)


#define __TTL_CALL_RECURSIVE__0(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		FIR_DEF(X, Y, 0, 1)
#define __TTL_CALL_RECURSIVE__1(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__0(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) SEC_DEF(X, Y, 0 ,1)
#define __TTL_CALL_RECURSIVE__2(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__1(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 1 ,2)
#define __TTL_CALL_RECURSIVE__3(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__2(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 2 ,3)
#define __TTL_CALL_RECURSIVE__4(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__3(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 3 ,4)
#define __TTL_CALL_RECURSIVE__5(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__4(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 4 ,5)
#define __TTL_CALL_RECURSIVE__6(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__5(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 5 ,6)
#define __TTL_CALL_RECURSIVE__7(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__6(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 6 ,7)
#define __TTL_CALL_RECURSIVE__8(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__7(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 7 ,8)
#define __TTL_CALL_RECURSIVE__9(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__8(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 8 ,9)
#define __TTL_CALL_RECURSIVE__10(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__9(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 9 ,10)
#define __TTL_CALL_RECURSIVE__11(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__10(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 10 ,11)
#define __TTL_CALL_RECURSIVE__12(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__11(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 11 ,12)
#define __TTL_CALL_RECURSIVE__13(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__12(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 12 ,13)
#define __TTL_CALL_RECURSIVE__14(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__13(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 13 ,14)
#define __TTL_CALL_RECURSIVE__15(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__14(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 14 ,15)
#define __TTL_CALL_RECURSIVE__16(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__15(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 15 ,16)
#define __TTL_CALL_RECURSIVE__17(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__16(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 16 ,17)
#define __TTL_CALL_RECURSIVE__18(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__17(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 17 ,18)
#define __TTL_CALL_RECURSIVE__19(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__18(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 18 ,19)
#define __TTL_CALL_RECURSIVE__20(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__19(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 19 ,20)
#define __TTL_CALL_RECURSIVE__21(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__20(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 20 ,21)
#define __TTL_CALL_RECURSIVE__22(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__21(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 21 ,22)
#define __TTL_CALL_RECURSIVE__23(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__22(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 22 ,23)
#define __TTL_CALL_RECURSIVE__24(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__23(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 23 ,24)
#define __TTL_CALL_RECURSIVE__25(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__24(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 24 ,25)
#define __TTL_CALL_RECURSIVE__26(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__25(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 25 ,26)
#define __TTL_CALL_RECURSIVE__27(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__26(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 26 ,27)
#define __TTL_CALL_RECURSIVE__28(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__27(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 27 ,28)
#define __TTL_CALL_RECURSIVE__29(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__28(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 28 ,29)
#define __TTL_CALL_RECURSIVE__30(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__29(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 29 ,30)
#define __TTL_CALL_RECURSIVE__31(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__30(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 30 ,31)
#define __TTL_CALL_RECURSIVE__32(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__31(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 31 ,32)
#define __TTL_CALL_RECURSIVE__33(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__32(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 32 ,33)
#define __TTL_CALL_RECURSIVE__34(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__33(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 33 ,34)
#define __TTL_CALL_RECURSIVE__35(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__34(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 34 ,35)
#define __TTL_CALL_RECURSIVE__36(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__35(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 35 ,36)
#define __TTL_CALL_RECURSIVE__37(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__36(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 36 ,37)
#define __TTL_CALL_RECURSIVE__38(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__37(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 37 ,38)
#define __TTL_CALL_RECURSIVE__39(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__38(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 38 ,39)
#define __TTL_CALL_RECURSIVE__40(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__39(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 39 ,40)
#define __TTL_CALL_RECURSIVE__41(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__40(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 40 ,41)
#define __TTL_CALL_RECURSIVE__42(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__41(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 41 ,42)
#define __TTL_CALL_RECURSIVE__43(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__42(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 42 ,43)
#define __TTL_CALL_RECURSIVE__44(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__43(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 43 ,44)
#define __TTL_CALL_RECURSIVE__45(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__44(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 44 ,45)
#define __TTL_CALL_RECURSIVE__46(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__45(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 45 ,46)
#define __TTL_CALL_RECURSIVE__47(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__46(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 46 ,47)
#define __TTL_CALL_RECURSIVE__48(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__47(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 47 ,48)
#define __TTL_CALL_RECURSIVE__49(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__48(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 48 ,49)
#define __TTL_CALL_RECURSIVE__50(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__49(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 49 ,50)
#define __TTL_CALL_RECURSIVE__51(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__50(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 50 ,51)
#define __TTL_CALL_RECURSIVE__52(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__51(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 51 ,52)
#define __TTL_CALL_RECURSIVE__53(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__52(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 52 ,53)
#define __TTL_CALL_RECURSIVE__54(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__53(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 53 ,54)
#define __TTL_CALL_RECURSIVE__55(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__54(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 54 ,55)
#define __TTL_CALL_RECURSIVE__56(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__55(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 55 ,56)
#define __TTL_CALL_RECURSIVE__57(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__56(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 56 ,57)
#define __TTL_CALL_RECURSIVE__58(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__57(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 57 ,58)
#define __TTL_CALL_RECURSIVE__59(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__58(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 58 ,59)
#define __TTL_CALL_RECURSIVE__60(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__59(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 59 ,60)
#define __TTL_CALL_RECURSIVE__61(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__60(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 60 ,61)
#define __TTL_CALL_RECURSIVE__62(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__61(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 61 ,62)
#define __TTL_CALL_RECURSIVE__63(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__62(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 62 ,63)
#define __TTL_CALL_RECURSIVE__64(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__63(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 63 ,64)
#define __TTL_CALL_RECURSIVE__65(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__64(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 64 ,65)
#define __TTL_CALL_RECURSIVE__66(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__65(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 65 ,66)
#define __TTL_CALL_RECURSIVE__67(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__66(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 66 ,67)
#define __TTL_CALL_RECURSIVE__68(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__67(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 67 ,68)
#define __TTL_CALL_RECURSIVE__69(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__68(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 68 ,69)
#define __TTL_CALL_RECURSIVE__70(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__69(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 69 ,70)
#define __TTL_CALL_RECURSIVE__71(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__70(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 70 ,71)
#define __TTL_CALL_RECURSIVE__72(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__71(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 71 ,72)
#define __TTL_CALL_RECURSIVE__73(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__72(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 72 ,73)
#define __TTL_CALL_RECURSIVE__74(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__73(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 73 ,74)
#define __TTL_CALL_RECURSIVE__75(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__74(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 74 ,75)
#define __TTL_CALL_RECURSIVE__76(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__75(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 75 ,76)
#define __TTL_CALL_RECURSIVE__77(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__76(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 76 ,77)
#define __TTL_CALL_RECURSIVE__78(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__77(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 77 ,78)
#define __TTL_CALL_RECURSIVE__79(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__78(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 78 ,79)
#define __TTL_CALL_RECURSIVE__80(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__79(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 79 ,80)
#define __TTL_CALL_RECURSIVE__81(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__80(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 80 ,81)
#define __TTL_CALL_RECURSIVE__82(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__81(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 81 ,82)
#define __TTL_CALL_RECURSIVE__83(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__82(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 82 ,83)
#define __TTL_CALL_RECURSIVE__84(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__83(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 83 ,84)
#define __TTL_CALL_RECURSIVE__85(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__84(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 84 ,85)
#define __TTL_CALL_RECURSIVE__86(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__85(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 85 ,86)
#define __TTL_CALL_RECURSIVE__87(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__86(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 86 ,87)
#define __TTL_CALL_RECURSIVE__88(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__87(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 87 ,88)
#define __TTL_CALL_RECURSIVE__89(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__88(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 88 ,89)
#define __TTL_CALL_RECURSIVE__90(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__89(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 89 ,90)
#define __TTL_CALL_RECURSIVE__91(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__90(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 90 ,91)
#define __TTL_CALL_RECURSIVE__92(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__91(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 91 ,92)
#define __TTL_CALL_RECURSIVE__93(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__92(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 92 ,93)
#define __TTL_CALL_RECURSIVE__94(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__93(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 93 ,94)
#define __TTL_CALL_RECURSIVE__95(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__94(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 94 ,95)
#define __TTL_CALL_RECURSIVE__96(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__95(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 95 ,96)
#define __TTL_CALL_RECURSIVE__97(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__96(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 96 ,97)
#define __TTL_CALL_RECURSIVE__98(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__97(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 97 ,98)
#define __TTL_CALL_RECURSIVE__99(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__98(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 98 ,99)
#define __TTL_CALL_RECURSIVE__100(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__99(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 99 ,10)
#define __TTL_CALL_RECURSIVE__101(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__100(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 100, 101)
#define __TTL_CALL_RECURSIVE__102(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__101(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 101, 102)
#define __TTL_CALL_RECURSIVE__103(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__102(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 102, 103)
#define __TTL_CALL_RECURSIVE__104(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__103(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 103, 104)
#define __TTL_CALL_RECURSIVE__105(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__104(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 104, 105)
#define __TTL_CALL_RECURSIVE__106(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__105(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 105, 106)
#define __TTL_CALL_RECURSIVE__107(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__106(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 106, 107)
#define __TTL_CALL_RECURSIVE__108(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__107(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 107, 108)
#define __TTL_CALL_RECURSIVE__109(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__108(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 108, 109)
#define __TTL_CALL_RECURSIVE__110(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__109(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 109, 110)
#define __TTL_CALL_RECURSIVE__111(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__110(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 110, 111)
#define __TTL_CALL_RECURSIVE__112(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__111(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 111, 112)
#define __TTL_CALL_RECURSIVE__113(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__112(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 112, 113)
#define __TTL_CALL_RECURSIVE__114(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__113(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 113, 114)
#define __TTL_CALL_RECURSIVE__115(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__114(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 114, 115)
#define __TTL_CALL_RECURSIVE__116(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__115(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 115, 116)
#define __TTL_CALL_RECURSIVE__117(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__116(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 116, 117)
#define __TTL_CALL_RECURSIVE__118(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__117(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 117, 118)
#define __TTL_CALL_RECURSIVE__119(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__118(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 118, 119)
#define __TTL_CALL_RECURSIVE__120(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__119(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 119, 120)
#define __TTL_CALL_RECURSIVE__121(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__120(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 120, 121)
#define __TTL_CALL_RECURSIVE__122(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__121(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 121, 122)
#define __TTL_CALL_RECURSIVE__123(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__122(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 122, 123)
#define __TTL_CALL_RECURSIVE__124(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__123(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 123, 124)
#define __TTL_CALL_RECURSIVE__125(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__124(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 124, 125)
#define __TTL_CALL_RECURSIVE__126(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__125(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 125, 126)
#define __TTL_CALL_RECURSIVE__127(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__126(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 126, 127)
#define __TTL_CALL_RECURSIVE__128(FIR_DEF, SEC_DEF, MID_DEF, END_DEF, X, Y)		__TTL_CALL_RECURSIVE__127(FIR_DEF, SEC_DEF, MID_DEF, MID_DEF, X, Y) END_DEF(X, Y, 127, 128)

